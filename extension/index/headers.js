var headersIndex=[{"name":" <concepts>","path":"cpp/header/concepts","description":"Fundamental library concepts [edit]"},{"name":" <coroutine>","path":"cpp/header/coroutine","description":"Coroutine support library  [edit]"},{"name":" <any>","path":"cpp/header/any","description":"std::any class [edit]"},{"name":" <bitset>","path":"cpp/header/bitset","description":"std::bitset class template [edit]"},{"name":" <chrono>","path":"cpp/header/chrono","description":"C++ time utilities [edit]"},{"name":" <compare>","path":"cpp/header/compare","description":"Three-way comparison operator support [edit]"},{"name":" <csetjmp>","path":"cpp/header/csetjmp","description":"Macro (and function) that saves (and jumps) to an execution context [edit]"},{"name":" <csignal>","path":"cpp/header/csignal","description":"Functions and macro constants for signal management [edit]"},{"name":" <cstdarg>","path":"cpp/header/cstdarg","description":"Handling of variable length argument lists [edit]"},{"name":" <cstddef>","path":"cpp/header/cstddef","description":"Standard macros and typedefs [edit]"},{"name":" <cstdlib>","path":"cpp/header/cstdlib","description":"General purpose utilities:  program control,  dynamic memory allocation,  random numbers,  sort and search  [edit]"},{"name":" <ctime>","path":"cpp/header/ctime","description":"C-style time/date utilities [edit]"},{"name":" <expected>","path":"cpp/header/expected","description":"std::expected class template [edit]"},{"name":" <functional>","path":"cpp/header/functional","description":"Function objects, Function invocations, Bind operations and Reference wrappers [edit]"},{"name":" <initializer_list>","path":"cpp/header/initializer list","description":"std::initializer_list class template [edit]"},{"name":" <optional>","path":"cpp/header/optional","description":"std::optional class template [edit]"},{"name":" <source_location>","path":"cpp/header/source location","description":"Supplies means to obtain source code location [edit]"},{"name":" <tuple>","path":"cpp/header/tuple","description":"std::tuple class template [edit]"},{"name":" <type_traits>","path":"cpp/header/type traits","description":"Compile-time type information [edit]"},{"name":" <typeindex>","path":"cpp/header/typeindex","description":"std::type_index  [edit]"},{"name":" <typeinfo>","path":"cpp/header/typeinfo","description":"Runtime type information utilities [edit]"},{"name":" <utility>","path":"cpp/header/utility","description":"Various  utility components [edit]"},{"name":" <variant>","path":"cpp/header/variant","description":"std::variant class template [edit]"},{"name":" <version>","path":"cpp/header/version","description":"Supplies implementation-dependent library information [edit]"},{"name":" <memory>","path":"cpp/header/memory","description":"High-level memory management utilities [edit]"},{"name":" <memory_resource>","path":"cpp/header/memory resource","description":"Polymorphic allocators and memory resources [edit]"},{"name":" <new>","path":"cpp/header/new","description":"Low-level memory management utilities [edit]"},{"name":" <scoped_allocator>","path":"cpp/header/scoped allocator","description":"Nested allocator class [edit]"},{"name":" <cfloat>","path":"cpp/header/cfloat","description":"Limits of floating-point types [edit]"},{"name":" <cinttypes>","path":"cpp/header/cinttypes","description":"Formatting macros, intmax_t and uintmax_t math and conversions [edit]"},{"name":" <climits>","path":"cpp/header/climits","description":"Limits of integral types [edit]"},{"name":" <cstdint>","path":"cpp/header/cstdint","description":"Fixed-width integer types and  limits of other types [edit]"},{"name":" <limits>","path":"cpp/header/limits","description":"Uniform way to query properties of arithmetic types [edit]"},{"name":" <stdfloat>","path":"cpp/header/stdfloat","description":"Optional extended floating-point types  [edit]"},{"name":" <cassert>","path":"cpp/header/cassert","description":"Conditionally compiled macro that compares its argument to zero [edit]"},{"name":" <cerrno>","path":"cpp/header/cerrno","description":"Macro containing the last error number [edit]"},{"name":" <exception>","path":"cpp/header/exception","description":"Exception handling utilities [edit]"},{"name":" <stacktrace>","path":"cpp/header/stacktrace","description":"Stacktrace library [edit]"},{"name":" <stdexcept>","path":"cpp/header/stdexcept","description":"Standard exception objects [edit]"},{"name":" <system_error>","path":"cpp/header/system error","description":"Defines std::error_code, a platform-dependent error code [edit]"},{"name":" <cctype>","path":"cpp/header/cctype","description":"Functions to determine the category of narrow characters [edit]"},{"name":" <charconv>","path":"cpp/header/charconv","description":"std::to_chars and std::from_chars  [edit]"},{"name":" <cstring>","path":"cpp/header/cstring","description":"Various  narrow character string handling functions [edit]"},{"name":" <cuchar>","path":"cpp/header/cuchar","description":"C-style  Unicode character conversion functions [edit]"},{"name":" <cwchar>","path":"cpp/header/cwchar","description":"Various wide and multibyte string handling functions [edit]"},{"name":" <cwctype>","path":"cpp/header/cwctype","description":"Functions to determine the category of wide characters [edit]"},{"name":" <format>","path":"cpp/header/format","description":"Formatting library including std::format  [edit]"},{"name":" <string>","path":"cpp/header/string","description":"std::basic_string class template [edit]"},{"name":" <string_view>","path":"cpp/header/string view","description":"std::basic_string_view class template [edit]"},{"name":" <array>","path":"cpp/header/array","description":"std::array container [edit]"},{"name":" <deque>","path":"cpp/header/deque","description":"std::deque container [edit]"},{"name":" <flat_map>","path":"cpp/header/flat map","description":"std::flat_map and std::flat_multimap container adaptors  [edit]"},{"name":" <flat_set>","path":"cpp/header/flat set","description":"std::flat_set and std::flat_multiset container adaptors  [edit]"},{"name":" <forward_list>","path":"cpp/header/forward list","description":"std::forward_list container [edit]"},{"name":" <list>","path":"cpp/header/list","description":"std::list container [edit]"},{"name":" <map>","path":"cpp/header/map","description":"std::map and std::multimap associative containers [edit]"},{"name":" <mdspan>","path":"cpp/header/mdspan","description":"std::mdspan view  [edit]"},{"name":" <queue>","path":"cpp/header/queue","description":"std::queue and std::priority_queue container adaptors [edit]"},{"name":" <set>","path":"cpp/header/set","description":"std::set and std::multiset associative containers [edit]"},{"name":" <span>","path":"cpp/header/span","description":"std::span view [edit]"},{"name":" <stack>","path":"cpp/header/stack","description":"std::stack container adaptor  [edit]"},{"name":" <unordered_map>","path":"cpp/header/unordered map","description":"std::unordered_map and std::unordered_multimap unordered associative containers [edit]"},{"name":" <unordered_set>","path":"cpp/header/unordered set","description":"std::unordered_set and std::unordered_multiset unordered associative containers [edit]"},{"name":" <vector>","path":"cpp/header/vector","description":"std::vector container [edit]"},{"name":" <iterator>","path":"cpp/header/iterator","description":"Range iterators [edit]"},{"name":" <generator>","path":"cpp/header/generator","description":"std::generator class template  [edit]"},{"name":" <ranges>","path":"cpp/header/ranges","description":"Range access, primitives, requirements, utilities and adaptors [edit]"},{"name":" <algorithm>","path":"cpp/header/algorithm","description":"Algorithms that operate on ranges [edit]"},{"name":" <execution>","path":"cpp/header/execution","description":"Predefined execution policies for parallel versions of the algorithms [edit]"},{"name":" <bit>","path":"cpp/header/bit","description":"Bit manipulation functions [edit]"},{"name":" <cfenv>","path":"cpp/header/cfenv","description":"Floating-point environment access functions [edit]"},{"name":" <cmath>","path":"cpp/header/cmath","description":"Common mathematics functions [edit]"},{"name":" <complex>","path":"cpp/header/complex","description":"Complex number type [edit]"},{"name":" <numbers>","path":"cpp/header/numbers","description":"Math constants [edit]"},{"name":" <numeric>","path":"cpp/header/numeric","description":"Numeric operations on values in ranges [edit]"},{"name":" <random>","path":"cpp/header/random","description":"Random number generators and distributions [edit]"},{"name":" <ratio>","path":"cpp/header/ratio","description":"Compile-time rational arithmetic [edit]"},{"name":" <valarray>","path":"cpp/header/valarray","description":"Class for representing and manipulating arrays of values [edit]"},{"name":" <clocale>","path":"cpp/header/clocale","description":"C localization utilities [edit]"},{"name":" <codecvt>","path":"cpp/header/codecvt","description":"Unicode conversion facilities [edit]"},{"name":" <locale>","path":"cpp/header/locale","description":"Localization utilities [edit]"},{"name":" <cstdio>","path":"cpp/header/cstdio","description":"C-style input-output functions [edit]"},{"name":" <fstream>","path":"cpp/header/fstream","description":"std::basic_fstream, std::basic_ifstream, std::basic_ofstream class templates and several typedefs [edit]"},{"name":" <iomanip>","path":"cpp/header/iomanip","description":"Helper functions to control the format of input and output [edit]"},{"name":" <ios>","path":"cpp/header/ios","description":"std::ios_base class, std::basic_ios class template and several typedefs [edit]"},{"name":" <iosfwd>","path":"cpp/header/iosfwd","description":"Forward declarations of all classes in the input/output library [edit]"},{"name":" <iostream>","path":"cpp/header/iostream","description":"Several standard stream objects [edit]"},{"name":" <istream>","path":"cpp/header/istream","description":"std::basic_istream class template and several typedefs [edit]"},{"name":" <ostream>","path":"cpp/header/ostream","description":"std::basic_ostream, std::basic_iostream class templates and several typedefs [edit]"},{"name":" <print>","path":"cpp/header/print","description":"Formatted output library including std::print  [edit]"},{"name":" <spanstream>","path":"cpp/header/spanstream","description":"std::basic_spanstream, std::basic_ispanstream, std::basic_ospanstream class templates and typedefs [edit]"},{"name":" <sstream>","path":"cpp/header/sstream","description":"std::basic_stringstream, std::basic_istringstream, std::basic_ostringstream class templates and several typedefs [edit]"},{"name":" <streambuf>","path":"cpp/header/streambuf","description":"std::basic_streambuf class template [edit]"},{"name":" <strstream>","path":"cpp/header/strstream","description":"std::strstream, std::istrstream, std::ostrstream  [edit]"},{"name":" <syncstream>","path":"cpp/header/syncstream","description":"std::basic_osyncstream, std::basic_syncbuf, and typedefs [edit]"},{"name":" <filesystem>","path":"cpp/header/filesystem","description":"std::path class and  supporting functions  [edit]"},{"name":" <regex>","path":"cpp/header/regex","description":"Classes, algorithms and iterators to support regular expression processing [edit]"},{"name":" <atomic>","path":"cpp/header/atomic","description":"Atomic operations library [edit]"},{"name":" <barrier>","path":"cpp/header/barrier","description":"Barriers  [edit]"},{"name":" <condition_variable>","path":"cpp/header/condition variable","description":"Thread waiting conditions [edit]"},{"name":" <future>","path":"cpp/header/future","description":"Primitives for asynchronous computations [edit]"},{"name":" <latch>","path":"cpp/header/latch","description":"Latches [edit]"},{"name":" <mutex>","path":"cpp/header/mutex","description":"Mutual exclusion primitives [edit]"},{"name":" <semaphore>","path":"cpp/header/semaphore","description":"Semaphores [edit]"},{"name":" <shared_mutex>","path":"cpp/header/shared mutex","description":"Shared mutual exclusion primitives [edit]"},{"name":" <stop_token>","path":"cpp/header/stop token","description":"Stop tokens for std::jthread  [edit]"},{"name":" <thread>","path":"cpp/header/thread","description":"std::thread class and  supporting functions [edit]"},{"name":" <assert.h>","path":"cpp/header/cassert","description":"Behaves same as <cassert>  [edit]"},{"name":" <ctype.h>","path":"cpp/header/cctype","description":"Behaves as if each name from <cctype> is placed in global namespace [edit]"},{"name":" <errno.h>","path":"cpp/header/cerrno","description":"Behaves same as <cerrno>  [edit]"},{"name":" <fenv.h>","path":"cpp/header/cfenv","description":"Behaves as if each name from <cfenv> is placed in global namespace [edit]"},{"name":" <float.h>","path":"cpp/header/cfloat","description":"Behaves same as <cfloat>  [edit]"},{"name":" <inttypes.h>","path":"cpp/header/cinttypes","description":"Behaves as if each name from <cinttypes> is placed in global namespace [edit]"},{"name":" <limits.h>","path":"cpp/header/climits","description":"Behaves same as <climits>  [edit]"},{"name":" <locale.h>","path":"cpp/header/clocale","description":"Behaves as if each name from <clocale> is placed in global namespace [edit]"},{"name":" <math.h>","path":"cpp/header/cmath","description":"Behaves as if each name from <cmath> is placed in global namespace,except for names of mathematical special functions [edit]"},{"name":" <setjmp.h>","path":"cpp/header/csetjmp","description":"Behaves as if each name from <csetjmp> is placed in global namespace [edit]"},{"name":" <signal.h>","path":"cpp/header/csignal","description":"Behaves as if each name from <csignal> is placed in global namespace [edit]"},{"name":" <stdarg.h>","path":"cpp/header/cstdarg","description":"Behaves as if each name from <cstdarg> is placed in global namespace  [edit]"},{"name":" <stddef.h>","path":"cpp/header/cstddef","description":"Behaves as if each name from <cstddef> is placed in global namespace,except for names of std::byte and related functions [edit]"},{"name":" <stdint.h>","path":"cpp/header/cstdint","description":"Behaves as if each name from <cstdint> is placed in global namespace [edit]"},{"name":" <stdio.h>","path":"cpp/header/cstdio","description":"Behaves as if each name from <cstdio> is placed in global namespace [edit]"},{"name":" <stdlib.h>","path":"cpp/header/cstdlib","description":"Behaves as if each name from <cstdlib> is placed in global namespace [edit]"},{"name":" <string.h>","path":"cpp/header/cstring","description":"Behaves as if each name from <cstring> is placed in global namespace [edit]"},{"name":" <time.h>","path":"cpp/header/ctime","description":"Behaves as if each name from <ctime> is placed in global namespace [edit]"},{"name":" <uchar.h>","path":"cpp/header/cuchar","description":"Behaves as if each name from <cuchar> is placed in global namespace [edit]"},{"name":" <wchar.h>","path":"cpp/header/cwchar","description":"Behaves as if each name from <cwchar> is placed in global namespace [edit]"},{"name":" <wctype.h>","path":"cpp/header/cwctype","description":"Behaves as if each name from <cwctype> is placed in global namespace [edit]"},{"name":" <stdatomic.h>","path":"cpp/header/stdatomic.h","description":"Defines _Atomic and provides corresponding components in the C standard library [edit]"},{"name":" <ccomplex>","path":"cpp/header/ccomplex","description":"Simply includes the header <complex>  [edit]"},{"name":" <complex.h>","path":"cpp/header/ccomplex","description":"Simply includes the header <complex>  [edit]"},{"name":" <ctgmath>","path":"cpp/header/ctgmath","description":"Simply includes the headers <complex> and <cmath>: the overloads equivalent to the contents of the C header tgmath.h are already provided by those headers [edit]"},{"name":" <tgmath.h>","path":"cpp/header/ctgmath","description":"Simply includes the headers <complex> and <cmath>   [edit]"},{"name":" <ciso646>","path":"cpp/header/ciso646","description":"Empty header. The macros that appear in iso646.h in C are keywords in C++ [edit]"},{"name":" <cstdalign>","path":"cpp/header/cstdalign","description":"Defines one compatibility macro constant [edit]"},{"name":" <cstdbool>","path":"cpp/header/cstdbool","description":"Defines one compatibility macro constant [edit]"},{"name":" <iso646.h>","path":"cpp/header/ciso646","description":"Has no effect [edit]"},{"name":" <stdalign.h>","path":"cpp/header/cstdalign","description":"Defines one compatibility macro constant [edit]"},{"name":" <stdbool.h>","path":"cpp/header/cstdbool","description":"Defines one compatibility macro constant  [edit]"}];